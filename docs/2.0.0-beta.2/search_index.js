var search_data = {
    'index': {
        'searchIndex': ["bbatsche","bbatsche\\entrust","bbatsche\\entrust\\entrust","bbatsche\\entrust\\entrustfacade","bbatsche\\entrust\\entrustpermission","bbatsche\\entrust\\entrustrole","bbatsche\\entrust\\entrustserviceprovider","bbatsche\\entrust\\hasrole","bbatsche\\entrust\\migrationcommand","bbatsche\\entrust\\entrust::__construct","bbatsche\\entrust\\entrust::hasrole","bbatsche\\entrust\\entrust::can","bbatsche\\entrust\\entrust::user","bbatsche\\entrust\\entrust::routeneedsrole","bbatsche\\entrust\\entrust::routeneedspermission","bbatsche\\entrust\\entrust::routeneedsroleorpermission","bbatsche\\entrust\\entrustpermission::__construct","bbatsche\\entrust\\entrustpermission::roles","bbatsche\\entrust\\entrustpermission::beforedelete","bbatsche\\entrust\\entrustrole::__construct","bbatsche\\entrust\\entrustrole::users","bbatsche\\entrust\\entrustrole::perms","bbatsche\\entrust\\entrustrole::beforedelete","bbatsche\\entrust\\entrustrole::savepermissions","bbatsche\\entrust\\entrustrole::attachpermission","bbatsche\\entrust\\entrustrole::detachpermission","bbatsche\\entrust\\entrustrole::attachpermissions","bbatsche\\entrust\\entrustrole::detachpermissions","bbatsche\\entrust\\entrustserviceprovider::boot","bbatsche\\entrust\\entrustserviceprovider::register","bbatsche\\entrust\\entrustserviceprovider::provides","bbatsche\\entrust\\hasrole::roles","bbatsche\\entrust\\hasrole::hasrole","bbatsche\\entrust\\hasrole::can","bbatsche\\entrust\\hasrole::ability","bbatsche\\entrust\\hasrole::attachrole","bbatsche\\entrust\\hasrole::detachrole","bbatsche\\entrust\\hasrole::attachroles","bbatsche\\entrust\\hasrole::detachroles","bbatsche\\entrust\\migrationcommand::fire"],
        'info': [["Bbatsche","","Bbatsche.html","","",3],["Bbatsche\\Entrust","","Bbatsche\/Entrust.html","","",3],["Entrust","Bbatsche\\Entrust","Bbatsche\/Entrust\/Entrust.html","","This class is the main entry point of entrust.",1],["EntrustFacade","Bbatsche\\Entrust","Bbatsche\/Entrust\/EntrustFacade.html"," < Facade","",1],["EntrustPermission","Bbatsche\\Entrust","Bbatsche\/Entrust\/EntrustPermission.html"," < Model","",1],["EntrustRole","Bbatsche\\Entrust","Bbatsche\/Entrust\/EntrustRole.html"," < Model","",1],["EntrustServiceProvider","Bbatsche\\Entrust","Bbatsche\/Entrust\/EntrustServiceProvider.html"," < ServiceProvider","",1],["HasRole","Bbatsche\\Entrust","Bbatsche\/Entrust\/HasRole.html","","",1],["MigrationCommand","Bbatsche\\Entrust","Bbatsche\/Entrust\/MigrationCommand.html"," < Command","",1],["Entrust::__construct","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method___construct","(<abbr title=\"Illuminate\\Foundation\\Application\">Application<\/abbr> $app)","Create a new confide instance.",2],["Entrust::hasRole","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_hasRole","($role, $requireAll = false)","Checks if the current user has a Role by its name",2],["Entrust::can","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_can","($permission, $requireAll = false)","Check if the current user has a permission by its name",2],["Entrust::user","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_user","()","Get the currently authenticated user or null.",2],["Entrust::routeNeedsRole","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_routeNeedsRole","(string $route, array|string $roles, mixed $result = null, bool $requireAll = true)","Filters a route for the name Role.",2],["Entrust::routeNeedsPermission","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_routeNeedsPermission","(string $route, array|string $permissions, mixed $result = null, bool $requireAll = true)","Filters a route for the permission.",2],["Entrust::routeNeedsRoleOrPermission","Bbatsche\\Entrust\\Entrust","Bbatsche\/Entrust\/Entrust.html#method_routeNeedsRoleOrPermission","(string $route, array|string $roles, array|string $permissions, mixed $result = null, bool $requireAll = false)","Filters a route for the permission.",2],["EntrustPermission::__construct","Bbatsche\\Entrust\\EntrustPermission","Bbatsche\/Entrust\/EntrustPermission.html#method___construct","(array $attributes = array())","Creates a new instance of the model.",2],["EntrustPermission::roles","Bbatsche\\Entrust\\EntrustPermission","Bbatsche\/Entrust\/EntrustPermission.html#method_roles","()","Many-to-Many relations with Roles.",2],["EntrustPermission::beforeDelete","Bbatsche\\Entrust\\EntrustPermission","Bbatsche\/Entrust\/EntrustPermission.html#method_beforeDelete","(bool $forced = false)","Before delete all constrained foreign relations.",2],["EntrustRole::__construct","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method___construct","(array $attributes = array())","Creates a new instance of the model.",2],["EntrustRole::users","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_users","()","Many-to-Many relations with Users.",2],["EntrustRole::perms","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_perms","()","Many-to-Many relations with Permission named perms",2],["EntrustRole::beforeDelete","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_beforeDelete","(bool $forced = false)","Before delete all constrained foreign relations",2],["EntrustRole::savePermissions","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_savePermissions","(mixed $inputPermissions)","Save the inputted permissions.",2],["EntrustRole::attachPermission","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_attachPermission","(object|array $permission)","Attach permission to current role.",2],["EntrustRole::detachPermission","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_detachPermission","(object|array $permission)","Detach permission form current role.",2],["EntrustRole::attachPermissions","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_attachPermissions","(mixed $permissions)","Attach multiple permissions to current role.",2],["EntrustRole::detachPermissions","Bbatsche\\Entrust\\EntrustRole","Bbatsche\/Entrust\/EntrustRole.html#method_detachPermissions","(mixed $permissions)","Detach multiple permissions from current role",2],["EntrustServiceProvider::boot","Bbatsche\\Entrust\\EntrustServiceProvider","Bbatsche\/Entrust\/EntrustServiceProvider.html#method_boot","()","Bootstrap the application events.",2],["EntrustServiceProvider::register","Bbatsche\\Entrust\\EntrustServiceProvider","Bbatsche\/Entrust\/EntrustServiceProvider.html#method_register","()","Register the service provider.",2],["EntrustServiceProvider::provides","Bbatsche\\Entrust\\EntrustServiceProvider","Bbatsche\/Entrust\/EntrustServiceProvider.html#method_provides","()","Get the services provided.",2],["HasRole::roles","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_roles","()","Many-to-Many relations with Role.",2],["HasRole::hasRole","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_hasRole","($name, $requireAll = false)","Checks if the user has a Role by its name.",2],["HasRole::can","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_can","($permission, $requireAll = false)","Check if user has a permission by its name.",2],["HasRole::ability","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_ability","(string|array $roles, string|array $permissions, array $options = array())","Checks role(s) and permission(s).",2],["HasRole::attachRole","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_attachRole","(mixed $role)","Alias to eloquent many-to-many relation's attach()",2],["HasRole::detachRole","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_detachRole","(mixed $role)","Alias to eloquent many-to-many relation's detach()",2],["HasRole::attachRoles","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_attachRoles","(mixed $roles)","Attach multiple roles to a user",2],["HasRole::detachRoles","Bbatsche\\Entrust\\HasRole","Bbatsche\/Entrust\/HasRole.html#method_detachRoles","(mixed $roles)","Detach multiple roles from a user",2],["MigrationCommand::fire","Bbatsche\\Entrust\\MigrationCommand","Bbatsche\/Entrust\/MigrationCommand.html#method_fire","()","Execute the console command.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']